-- MySQL Script generated by MySQL Workbench
-- ter 14 ago 2018 08:43:08 -03
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema isac
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `USUARIO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `USUARIO` ;

CREATE TABLE IF NOT EXISTS `USUARIO` (
  `ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `NOME` VARCHAR(45) NOT NULL,
  `SENHA` VARCHAR(60) NOT NULL,
  `EMAIL` VARCHAR(100) NOT NULL,
  `DATA_HORA_CRIACAO` DATETIME NOT NULL,
  `ULTIMO_ACESSO` DATETIME NULL,
  `FOTO` VARCHAR(150) NULL,
  `NOME_COMPLETO` VARCHAR(100) NOT NULL,
  `TIPO` INT NOT NULL DEFAULT 0,
  `FACEBOOK_ID` BIGINT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `USUARIO_EMAIL_UNIQUE` (`EMAIL` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `IES`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `IES` ;

CREATE TABLE IF NOT EXISTS `IES` (
  `ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `NOME` VARCHAR(300) NOT NULL,
  `SIGLA` VARCHAR(15) NULL,
  `DATA_HORA` DATETIME NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CURSO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CURSO` ;

CREATE TABLE IF NOT EXISTS `CURSO` (
  `ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `CODIGO` VARCHAR(30) NOT NULL,
  `TITULO` VARCHAR(250) NOT NULL,
  `DESCRICAO` MEDIUMTEXT NULL,
  `DATA_HORA_CRIACAO` DATETIME NOT NULL,
  `PROFESSOR` BIGINT UNSIGNED NOT NULL,
  `NOME_DISCIPLINA` VARCHAR(250) NOT NULL,
  `STATUS` INT UNSIGNED NOT NULL DEFAULT 0,
  `ORDENACAO` INT NOT NULL DEFAULT 0,
  `IES_ID` BIGINT UNSIGNED NULL,
  `SENHA` VARCHAR(15) NULL,
  PRIMARY KEY (`ID`),
  INDEX `IDX_CURSO_PROFESSOR` (`PROFESSOR` ASC),
  INDEX `IDX_CURSO_IES_ID` (`IES_ID` ASC),
  INDEX `IDX_CURSO_SENHA` (`SENHA` ASC),
  CONSTRAINT `FK_CURSO_PROFESSOR`
    FOREIGN KEY (`PROFESSOR`)
    REFERENCES `USUARIO` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_CURSO_IES1`
    FOREIGN KEY (`IES_ID`)
    REFERENCES `IES` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `MATRICULA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MATRICULA` ;

CREATE TABLE IF NOT EXISTS `MATRICULA` (
  `USUARIO_ID` BIGINT UNSIGNED NOT NULL,
  `CURSO_ID` BIGINT UNSIGNED NOT NULL,
  `DATA_HORA_CRIACAO` DATETIME NOT NULL,
  `SITUACAO` INT UNSIGNED NOT NULL DEFAULT 0,
  `NOTA_FINAL` DECIMAL(10,2) NULL,
  `CODIGO` VARCHAR(30) NULL,
  PRIMARY KEY (`USUARIO_ID`, `CURSO_ID`),
  INDEX `IDX_MATRICULA_CURSO_ID` (`CURSO_ID` ASC),
  INDEX `IDX_MATRICULA_USUARIO_ID` (`USUARIO_ID` ASC),
  CONSTRAINT `FK_MATRICULA_USUARIO_ID`
    FOREIGN KEY (`USUARIO_ID`)
    REFERENCES `USUARIO` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_MATRICULA_CURSO_ID`
    FOREIGN KEY (`CURSO_ID`)
    REFERENCES `CURSO` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `AVALIACAO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `AVALIACAO` ;

CREATE TABLE IF NOT EXISTS `AVALIACAO` (
  `ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `CURSO_ID` BIGINT UNSIGNED NOT NULL,
  `ESTADO` INT NOT NULL DEFAULT 0,
  `DATA_HORA_FIM` DATETIME NULL,
  `DATA_HORA_INICIO` DATETIME NULL,
  `DESCRICAO` TEXT NULL,
  `TITULO` VARCHAR(250) NOT NULL,
  `STATUS` INT UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`ID`),
  INDEX `IDX_AVALIACAO_CURSO_ID` (`CURSO_ID` ASC),
  CONSTRAINT `FK_AVALIACAO_CURSO_ID`
    FOREIGN KEY (`CURSO_ID`)
    REFERENCES `CURSO` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `RESOLUCAO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `RESOLUCAO` ;

CREATE TABLE IF NOT EXISTS `RESOLUCAO` (
  `AVALIACAO_ID` BIGINT UNSIGNED NOT NULL,
  `USUARIO_ID` BIGINT UNSIGNED NOT NULL,
  `DATA_HORA_ENVIO` DATETIME NOT NULL,
  `CAMINHO_ARQUIVO_RESOLUCAO` VARCHAR(150) NULL,
  `RESOLUCAO` TEXT NULL,
  `CAMINHO_ARQUIVO_CORRECAO` VARCHAR(150) NULL,
  `CORRECAO` TEXT NULL,
  `NOTA` DECIMAL(10,2) NULL,
  `DATA_HORA_CORRECAO` DATETIME NULL,
  `ESTADO` INT NOT NULL,
  PRIMARY KEY (`AVALIACAO_ID`, `USUARIO_ID`),
  INDEX `IDX_RESOLUCAO_USUARIO_ID` (`USUARIO_ID` ASC),
  INDEX `IDX_RESOLUCAO_AVALIACAO_ID` (`AVALIACAO_ID` ASC),
  CONSTRAINT `FK_RESOLUCAO_AVALIACAO_ID`
    FOREIGN KEY (`AVALIACAO_ID`)
    REFERENCES `AVALIACAO` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_RESOLUCAO_USUARIO_ID`
    FOREIGN KEY (`USUARIO_ID`)
    REFERENCES `USUARIO` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `MENSAGEM`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MENSAGEM` ;

CREATE TABLE IF NOT EXISTS `MENSAGEM` (
  `ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `MENSAGEM` VARCHAR(1024) NOT NULL,
  `DATA_HORA` DATETIME NOT NULL,
  `TIPO` INT NOT NULL,
  `REMETENTE` BIGINT UNSIGNED NOT NULL,
  `PAI` BIGINT UNSIGNED NULL,
  `DESTINO` BIGINT NOT NULL,
  `ARQUIVOS` VARCHAR(240) NULL,
  PRIMARY KEY (`ID`),
  INDEX `IDX_MENSAGEM_REMETENTE` (`REMETENTE` ASC),
  INDEX `IDX_MENSAGEM_PAI` (`PAI` ASC),
  CONSTRAINT `FK_MENSAGEM_REMETENTE`
    FOREIGN KEY (`REMETENTE`)
    REFERENCES `USUARIO` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_MENSAGEM_PAI`
    FOREIGN KEY (`PAI`)
    REFERENCES `MENSAGEM` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `GRUPO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GRUPO` ;

CREATE TABLE IF NOT EXISTS `GRUPO` (
  `ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `NOME` VARCHAR(150) NOT NULL,
  `DATA_HORA_CRIACAO` DATETIME NOT NULL,
  `CRIADOR` BIGINT UNSIGNED NOT NULL,
  `CODIGO` VARCHAR(30) NOT NULL,
  `DESCRICAO` TEXT NULL,
  `STATUS` INT UNSIGNED NOT NULL DEFAULT 0,
  `ORDENACAO` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`ID`),
  INDEX `IDX_GRUPO_CRIADOR` (`CRIADOR` ASC),
  UNIQUE INDEX `GRUPO_CODIGO_UNICO` (`CODIGO` ASC),
  CONSTRAINT `FK_GRUPO_CRIADOR`
    FOREIGN KEY (`CRIADOR`)
    REFERENCES `USUARIO` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `PASTAS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PASTAS` ;

CREATE TABLE IF NOT EXISTS `PASTAS` (
  `ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `NOME` VARCHAR(100) NOT NULL,
  `GRUPO_ID` BIGINT UNSIGNED NOT NULL,
  `DATA_HORA` DATETIME NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `IDX_PASTAS_GRUPO_ID` (`GRUPO_ID` ASC),
  CONSTRAINT `FK_PASTAS_GRUPO_ID`
    FOREIGN KEY (`GRUPO_ID`)
    REFERENCES `GRUPO` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `MIDIA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MIDIA` ;

CREATE TABLE IF NOT EXISTS `MIDIA` (
  `ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `DESCRICAO` VARCHAR(240) NOT NULL,
  `CAMINHO` VARCHAR(300) NOT NULL,
  `TIPO` INT NOT NULL,
  `DESTINO` BIGINT UNSIGNED NOT NULL,
  `REMETENTE` BIGINT UNSIGNED NOT NULL,
  `DATA_HORA` DATETIME NOT NULL,
  `TIPO_DESTINO` INT NOT NULL,
  `PASTAS_ID` BIGINT UNSIGNED NULL,
  `STATUS` INT UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`ID`),
  INDEX `IDX_MIDIA_REMETENTE` (`REMETENTE` ASC),
  INDEX `IDX_MIDIA_PASTAS_ID` (`PASTAS_ID` ASC),
  CONSTRAINT `FK_MIDIA_USUARIO1`
    FOREIGN KEY (`REMETENTE`)
    REFERENCES `USUARIO` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_MIDIA_PASTAS1`
    FOREIGN KEY (`PASTAS_ID`)
    REFERENCES `PASTAS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `VOTACAO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `VOTACAO` ;

CREATE TABLE IF NOT EXISTS `VOTACAO` (
  `USUARIO_ID` BIGINT UNSIGNED NOT NULL,
  `DESTINO` BIGINT UNSIGNED NOT NULL,
  `TIPO` INT NOT NULL,
  `DATA_HORA` TIMESTAMP NOT NULL DEFAULT NOW(),
  PRIMARY KEY (`USUARIO_ID`, `DESTINO`, `TIPO`),
  CONSTRAINT `FK_VOTACAO_USUARIO1`
    FOREIGN KEY (`USUARIO_ID`)
    REFERENCES `USUARIO` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `REGISTRO_GRUPO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `REGISTRO_GRUPO` ;

CREATE TABLE IF NOT EXISTS `REGISTRO_GRUPO` (
  `USUARIO_ID` BIGINT UNSIGNED NOT NULL,
  `GRUPO_ID` BIGINT UNSIGNED NOT NULL,
  `TIPO` INT NOT NULL,
  `DATA_HORA_CRIACAO` DATETIME NOT NULL,
  `SITUACAO` INT NOT NULL,
  PRIMARY KEY (`USUARIO_ID`, `GRUPO_ID`),
  INDEX `IDX_REGISTRO_GRUPO_GRUPO_ID` (`GRUPO_ID` ASC),
  INDEX `IDX_REGISTRO_GRUPO_USUARIO_ID` (`USUARIO_ID` ASC),
  CONSTRAINT `FK_REGISTRO_GRUPO_USUARIO_ID`
    FOREIGN KEY (`USUARIO_ID`)
    REFERENCES `USUARIO` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_REGISTRO_GRUPO_GRUPO_ID`
    FOREIGN KEY (`GRUPO_ID`)
    REFERENCES `GRUPO` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `INDICACAO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `INDICACAO` ;

CREATE TABLE IF NOT EXISTS `INDICACAO` (
  `CURSO_ID` BIGINT UNSIGNED NOT NULL,
  `GRUPO_ID` BIGINT UNSIGNED NOT NULL,
  `DATA_HORA_CRIACAO` DATETIME NOT NULL,
  PRIMARY KEY (`CURSO_ID`, `GRUPO_ID`),
  INDEX `IDX_INDICACAO_GRUPO_ID` (`GRUPO_ID` ASC),
  INDEX `IDX_INDICACAO_CURSO_ID` (`CURSO_ID` ASC),
  CONSTRAINT `FK_INDICACAO_CURSO_ID`
    FOREIGN KEY (`CURSO_ID`)
    REFERENCES `CURSO` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_INDICACAO_GRUPO_ID`
    FOREIGN KEY (`GRUPO_ID`)
    REFERENCES `GRUPO` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `CHAT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CHAT` ;

CREATE TABLE IF NOT EXISTS `CHAT` (
  `ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `MENSAGEM` VARCHAR(240) NOT NULL,
  `DATA_HORA` DATETIME NOT NULL,
  `USUARIO_ID` BIGINT UNSIGNED NOT NULL,
  `DESTINO` BIGINT UNSIGNED NOT NULL,
  `TIPO` INT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `IDX_CHAT_USUARIO_ID` (`USUARIO_ID` ASC),
  CONSTRAINT `FK_CHAT_USUARIO_ID`
    FOREIGN KEY (`USUARIO_ID`)
    REFERENCES `USUARIO` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `AULA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `AULA` ;

CREATE TABLE IF NOT EXISTS `AULA` (
  `ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `TITULO` VARCHAR(250) NOT NULL,
  `DESCRICAO` MEDIUMTEXT NULL,
  `DATA_HORA` DATETIME NOT NULL,
  `CURSO_ID` BIGINT UNSIGNED NOT NULL,
  `STATUS` INT UNSIGNED NOT NULL DEFAULT 0,
  `DATA_HORA_CRIACAO` DATETIME NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `IDX_AULA_CURSO_ID` (`CURSO_ID` ASC),
  CONSTRAINT `FK_AULA_CURSO1`
    FOREIGN KEY (`CURSO_ID`)
    REFERENCES `CURSO` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `LOG`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `LOG` ;

CREATE TABLE IF NOT EXISTS `LOG` (
  `ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `DATA_HORA` DATETIME NOT NULL,
  `OPERACAO` INT NOT NULL,
  `USUARIO` BIGINT NOT NULL,
  `DESTINO` BIGINT NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `PAGINA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PAGINA` ;

CREATE TABLE IF NOT EXISTS `PAGINA` (
  `ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `TITULO` VARCHAR(250) NOT NULL,
  `TEXTO` TEXT NOT NULL,
  `DATA_HORA` DATETIME NOT NULL,
  `GRUPO_ID` BIGINT UNSIGNED NOT NULL,
  `VERSAO` INT(11) NOT NULL,
  `USUARIO_ID` BIGINT UNSIGNED NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `IDX_PAGINA_GRUPO_ID` (`GRUPO_ID` ASC),
  INDEX `IDX_PAGINA_USUARIO_ID` (`USUARIO_ID` ASC),
  CONSTRAINT `FK_PAGINA_GRUPO_ID`
    FOREIGN KEY (`GRUPO_ID`)
    REFERENCES `GRUPO` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_PAGINA_USUARIO1`
    FOREIGN KEY (`USUARIO_ID`)
    REFERENCES `USUARIO` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `PARAMETROS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PARAMETROS` ;

CREATE TABLE IF NOT EXISTS `PARAMETROS` (
  `ID` BIGINT UNSIGNED NOT NULL,
  `PARAMETRO1` INT NULL,
  `PARAMETRO2` INT NULL,
  `PARAMETRO3` INT NULL,
  `PARAMETRO4` INT NULL,
  `PARAMETRO5` INT NULL,
  `PARAMETRO6` INT NULL,
  `PARAMETRO7` INT NULL,
  `PARAMETRO8` INT NULL,
  `PARAMETRO9` INT NULL,
  `PARAMETRO10` INT NULL,
  PRIMARY KEY (`ID`),
  INDEX `IDX_PARAMETROS_ID` (`ID` ASC),
  CONSTRAINT `FK_PARAMETROS_ID`
    FOREIGN KEY (`ID`)
    REFERENCES `USUARIO` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `USUARIO_DETALHE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `USUARIO_DETALHE` ;

CREATE TABLE IF NOT EXISTS `USUARIO_DETALHE` (
  `ID` BIGINT UNSIGNED NOT NULL,
  `SEXO` TINYINT(1) NULL,
  `UNIVERSIDADE` VARCHAR(500) NULL,
  `SIGLA_UNIVERSIDADE` VARCHAR(10) NULL,
  `DATA_NASCIMENTO` DATE NULL,
  `CURSO` VARCHAR(500) NULL,
  `CIDADE_ESTADO` VARCHAR(500) NULL,
  `DATA_HORA_ATUALIZACAO` DATETIME NOT NULL,
  INDEX `IDX_PERFIL_ID` (`ID` ASC),
  PRIMARY KEY (`ID`),
  CONSTRAINT `FK_PERFIL_ID`
    FOREIGN KEY (`ID`)
    REFERENCES `USUARIO` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CURSO_DETALHE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CURSO_DETALHE` ;

CREATE TABLE IF NOT EXISTS `CURSO_DETALHE` (
  `ID` BIGINT UNSIGNED NOT NULL,
  `UNIVERSIDADE` VARCHAR(500) NULL,
  `SIGLA_UNIVERSIDADE` VARCHAR(10) NULL,
  `CURSO` VARCHAR(500) NULL,
  `CIDADE_ESTADO` VARCHAR(500) NULL,
  `DATA_HORA_ATUALIZACAO` DATETIME NOT NULL,
  `TIPO` INT NULL,
  INDEX `IDX_CURSO_DETALHE_ID` (`ID` ASC),
  PRIMARY KEY (`ID`),
  CONSTRAINT `FK_CURSO_DETALHE_ID`
    FOREIGN KEY (`ID`)
    REFERENCES `CURSO` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `AGENDA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `AGENDA` ;

CREATE TABLE IF NOT EXISTS `AGENDA` (
  `ID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `TITULO` VARCHAR(250) NOT NULL,
  `TEXTO` TEXT NULL,
  `DATA_HORA_INICIO` DATETIME NOT NULL,
  `DATA_HORA_FIM` DATETIME NULL,
  `DATA_HORA_CRIACAO` DATETIME NOT NULL,
  `TIPO_DESTINO` INT NOT NULL,
  `USUARIO_ID` BIGINT UNSIGNED NOT NULL,
  `DESTINO` BIGINT NULL,
  `STATUS` INT NOT NULL,
  `TIPO` INT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `IDX_AGENDA_USUARIO_ID` (`USUARIO_ID` ASC),
  CONSTRAINT `FK_AGENDA_USUARIO_ID`
    FOREIGN KEY (`USUARIO_ID`)
    REFERENCES `USUARIO` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `USUARIO_IES`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `USUARIO_IES` ;

CREATE TABLE IF NOT EXISTS `USUARIO_IES` (
  `USUARIO_ID` BIGINT UNSIGNED NOT NULL,
  `IES_ID` BIGINT UNSIGNED NOT NULL,
  `DATA_HORA` DATETIME NOT NULL,
  PRIMARY KEY (`USUARIO_ID`, `IES_ID`),
  INDEX `IDX_USUARIO_IES_IES_ID` (`IES_ID` ASC),
  INDEX `IDX_USUARIO_IES_USUARIO_ID` (`USUARIO_ID` ASC),
  CONSTRAINT `FK_USUARIO_IES_USUARIO1`
    FOREIGN KEY (`USUARIO_ID`)
    REFERENCES `USUARIO` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_USUARIO_IES_IES1`
    FOREIGN KEY (`IES_ID`)
    REFERENCES `IES` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- procedure ESTATISTICAS
-- -----------------------------------------------------
DROP procedure IF EXISTS `ESTATISTICAS`;

DELIMITER $$


CREATE PROCEDURE ESTATISTICAS ()
BEGIN

    DECLARE contadorAlunos BIGINT;
    DECLARE contadorProfessores BIGINT;
    DECLARE contadorTurmas BIGINT;
    DECLARE contadorGrupos BIGINT;
    DECLARE contadorAulas BIGINT;
    DECLARE contadorArquivos BIGINT;
    DECLARE contadorAvaliacoes BIGINT;
    DECLARE contadorMatriculas BIGINT;
    DECLARE ultimaDataHora DATETIME;
    DECLARE contadorAcessos BIGINT;
    DECLARE contadorMensagens BIGINT;
	DECLARE contadorUsuariosSumidos BIGINT;

    SELECT COUNT(*) INTO contadorAlunos FROM USUARIO WHERE TIPO = 0;

    SELECT COUNT(*) INTO contadorProfessores FROM USUARIO WHERE TIPO = 1;

    SELECT COUNT(*) INTO contadorTurmas FROM CURSO WHERE STATUS <> 11; -- excluindo as turmas deletadas

    SELECT COUNT(*) INTO contadorGrupos FROM GRUPO;

    SELECT COUNT(*) INTO contadorAulas FROM AULA;

    SELECT COUNT(*) INTO contadorArquivos FROM MIDIA;

    SELECT COUNT(*) INTO contadorAvaliacoes FROM AVALIACAO;

    SELECT COUNT(*) INTO contadorMatriculas FROM MATRICULA;

    SELECT DATA_HORA INTO ultimaDataHora FROM ESTATISTICAS ORDER BY DATA_HORA DESC LIMIT 1;

    SELECT COUNT(*) INTO contadorAcessos FROM USUARIO WHERE ULTIMO_ACESSO BETWEEN ultimaDataHora and NOW();

    SELECT COUNT(*) INTO contadorMensagens FROM MENSAGEM;

	SELECT COUNT(*) INTO contadorUsuariosSumidos FROM USUARIO WHERE ULTIMO_ACESSO < DATE_ADD(CURDATE(), INTERVAL -10 DAY) OR ULTIMO_ACESSO IS NULL;

    INSERT INTO ESTATISTICAS (ID, DATA_HORA, QUANTIDADE_ALUNOS, QUANTIDADE_TURMAS, 
        QUANTIDADE_GRUPOS, QUANTIDADE_AULAS, QUANTIDADE_ARQUIVOS, QUANTIDADE_AVALIACOES,
        QUANTIDADE_MATRICULAS, ULTIMOS_ACESSOS, QUANTIDADE_PROFESSORES, QUANTIDADE_MENSAGENS, QUANTIDADE_USUARIOS_SUMIDOS)
    VALUES(NULL, NOW(), contadorAlunos, contadorTurmas, contadorGrupos, contadorAulas, 
        contadorArquivos, contadorAvaliacoes, contadorMatriculas, contadorAcessos, contadorProfessores, contadorMensagens, contadorUsuariosSumidos);

    -- OUTRAS ATUALIZACOES NA BASE DE DADOS
    UPDATE CURSO C SET ORDENACAO = (
        SELECT QUANT_ALUNOS FROM CONTADOR_ALUNOS_POR_TURMA C2 WHERE C2.ID = C.ID
    )
    WHERE C.STATUS < 10;

    UPDATE CURSO SET ORDENACAO = -1 WHERE STATUS >= 10;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure MARCAR_COMO_PROFESSOR
-- -----------------------------------------------------
DROP procedure IF EXISTS `MARCAR_COMO_PROFESSOR`;

DELIMITER $$


CREATE PROCEDURE MARCAR_COMO_PROFESSOR ()
BEGIN
   DECLARE cid, pid, contador BIGINT;
   DECLARE done INT DEFAULT FALSE;

   DECLARE cursos CURSOR
   FOR
    -- Buscando os cursos que tem contador de alunos maior que 2
         SELECT C.ID AS ID, 
            C.PROFESSOR AS PROFESSOR, 
            COUNT(C.ID) AS QUANT_ALUNOS 
        FROM CURSO C join MATRICULA M on M.CURSO_ID = C.ID
        WHERE C.STATUS <> 11
        GROUP BY C.ID HAVING QUANT_ALUNOS > 2;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;

    -- Inicializando todos os usuarios para tipo aluno
    UPDATE USUARIO SET TIPO = 0;

   OPEN cursos;

   read_loop: LOOP

      FETCH cursos INTO cid, pid, contador;
	
        IF done THEN
                LEAVE read_loop;
        END IF;

        UPDATE USUARIO SET TIPO = 1 WHERE ID = pid;

   END LOOP;

   CLOSE cursos;

END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
